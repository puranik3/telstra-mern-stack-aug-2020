{"version":3,"sources":["assets/logo.png","history.js","config.js","components/App.js","components/Transaction.js","components/Block.js","components/Blockchain.js","components/ConductTransaction.js","components/TransactionPool.js","index.js"],"names":["module","exports","createBrowserHistory","API_BASE_URL","MILLISECONDS_PY","App","useState","walletInfo","setWalletInfo","useEffect","fetch","then","response","json","address","balance","className","src","logo","alt","to","Transaction","transaction","input","output","recipients","Object","keys","map","recipient","key","ToggleTransactionDisplay","block","displayTransaction","setDisplayTransaction","data","toggleDisplayTransaction","id","Button","variant","size","onClick","Block","timestamp","hash","hashDisplay","substring","timestampDisplay","Date","toLocaleString","PAGE_RANGE","Blockchain","blockchain","setBlockchain","blockchainLength","setBlockchainLength","fetchBlockchainPage","start","end","buttonNumbers","i","push","number","ConductTransaction","amount","setAmount","setRecipient","knownAddresses","setKnownAddresses","FormGroup","FormControl","placeholder","value","onChange","event","target","Number","method","headers","body","JSON","stringify","console","log","alert","history","knownAddress","length","POLL_INTERVAL","TransactionPool","transactions","setTransactions","fetchTransactions","intervalId","setInterval","clearInterval","ReactDOM","render","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.b4ad35a7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ba20fc9a.png\";","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","const API_BASE_URL = 'https://nameless-earth-91304.herokuapp.com/';\nconst NANOSECONDS_PY = 1;\nconst MICROSECONDS_PY = 1000 * NANOSECONDS_PY;\nconst MILLISECONDS_PY = 1000 * MICROSECONDS_PY;\n\nconst MILLISECONDS_JS = 1;\nconst SECONDS_JS = MILLISECONDS_JS * 1000;\n\nexport { API_BASE_URL, MILLISECONDS_PY, SECONDS_JS };\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../assets/logo.png';\nimport { API_BASE_URL } from '../config';\n\nfunction App() {\n  const [walletInfo, setWalletInfo] = useState({});\n\n  useEffect(() => {\n    fetch(`${API_BASE_URL}/wallet/info`)\n      .then(response => response.json())\n      .then(json => setWalletInfo(json));\n  }, []);\n\n  const { address, balance } = walletInfo;\n\n  return (\n    <div className=\"App\">\n      <img className=\"logo\" src={logo} alt=\"application-logo\" />\n      <h3>Welcome to pychain</h3>\n      <br />\n      <Link to=\"/blockchain\">Blockchain</Link>\n      <Link to=\"/conduct-transaction\">Conduct a Transaction</Link>\n      <Link to=\"/transaction-pool\">Transaction Pool</Link>\n      <br />\n      <div className=\"WalletInfo\">\n        <div>Address: {address}</div>\n        <div>Balance: {balance}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nfunction Transaction({ transaction }) {\n  const { input, output } = transaction;\n  const recipients = Object.keys(output);\n\n  return (\n    <div className=\"Transaction\">\n      <div>From: {input.address}</div>\n      {\n        recipients.map(recipient => (\n          <div key={recipient}>\n            To: {recipient} | Sent: {output[recipient]}\n          </div>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default Transaction;\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { MILLISECONDS_PY } from '../config';\nimport Transaction from './Transaction';\n\nfunction ToggleTransactionDisplay({ block }) {\n  const [displayTransaction, setDisplayTransaction] = useState(false);\n  const { data } = block;\n\n  const toggleDisplayTransaction = () => {\n    setDisplayTransaction(!displayTransaction);\n  }\n\n  if (displayTransaction) {\n    return (\n      <div>\n        {\n          data.map(transaction => (\n            <div key={transaction.id}>\n              <hr />\n              <Transaction transaction={transaction} />\n            </div>\n          ))\n        }\n        <br />\n        <Button\n          variant=\"danger\"\n          size=\"sm\"\n          onClick={toggleDisplayTransaction}\n        >\n          Show Less\n        </Button>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <br />\n      <Button\n        variant=\"danger\"\n        size=\"sm\"\n        onClick={toggleDisplayTransaction}\n      >\n        Show More\n      </Button>\n    </div>\n  )\n}\n\nfunction Block({ block }) {\n  const { timestamp, hash } = block;\n  const hashDisplay = `${hash.substring(0, 15)}...`;\n  const timestampDisplay = new Date(timestamp / MILLISECONDS_PY).toLocaleString();\n\n  return (\n    <div className=\"Block\">\n      <div>Hash: {hashDisplay}</div>\n      <div>Timestamp: {timestampDisplay}</div>\n      <ToggleTransactionDisplay block={block} />\n    </div>\n  )\n}\n\nexport default Block;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { API_BASE_URL } from '../config';\nimport Block from './Block';\n\nconst PAGE_RANGE = 3;\n\nfunction Blockchain() {\n  const [blockchain, setBlockchain] = useState([]);\n  const [blockchainLength, setBlockchainLength] = useState(0);\n\n  const fetchBlockchainPage = ({ start, end }) => {\n    fetch(`${API_BASE_URL}/blockchain/range?start=${start}&end=${end}`)\n      .then(response => response.json())\n      .then(json => setBlockchain(json));\n  }\n\n  useEffect(() => {\n    fetchBlockchainPage({ start: 0, end: PAGE_RANGE });\n\n    fetch(`${API_BASE_URL}/blockchain/length`)\n      .then(response => response.json())\n      .then(json => setBlockchainLength(json));\n  }, []);\n\n  const buttonNumbers = [];\n  for (let i=0; i<blockchainLength/PAGE_RANGE; i++) {\n    buttonNumbers.push(i);\n  }\n\n  return (\n    <div className=\"Blockchain\">\n      <Link to='/'>Home</Link>\n      <hr />\n      <h3>Blockchain</h3>\n      <div>\n        {\n          blockchain.map(block => <Block key={block.hash} block={block} />)\n        }\n      </div>\n      <div>\n        {\n          buttonNumbers.map(number => {\n            const start = number * PAGE_RANGE;\n            const end = (number+1) * PAGE_RANGE;\n\n            return (\n              <span key={number} onClick={() => fetchBlockchainPage({ start, end })}>\n                <Button size=\"sm\" variant=\"danger\">\n                  {number+1}\n                </Button>{' '}\n              </span>\n            )\n          })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Blockchain;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { FormGroup, FormControl, Button } from 'react-bootstrap';\nimport { API_BASE_URL } from '../config';\nimport history from '../history';\n\nfunction ConductTransaction() {\n  const [amount, setAmount] = useState(0);\n  const [recipient, setRecipient] = useState('');\n  const [knownAddresses, setKnownAddresses] = useState([]);\n\n  useEffect(() => {\n    fetch(`${API_BASE_URL}/known-addresses`)\n      .then(response => response.json())\n      .then(json => setKnownAddresses(json));\n  }, []);\n\n  const updateRecipient = event => {\n    setRecipient(event.target.value);\n  }\n\n  const updateAmount = event => {\n    setAmount(Number(event.target.value));\n  }\n\n  const submitTransaction = () => {\n    fetch(`${API_BASE_URL}/wallet/transact`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ recipient, amount })\n    }).then(response => response.json())\n      .then(json => {\n        console.log('submitTransaction json', json);\n\n        alert('Success!');\n\n        history.push('/transaction-pool');\n      });\n  }\n\n  return (\n    <div className=\"ConductTransaction\">\n      <Link to=\"/\">Home</Link>\n      <hr />\n      <h3>Conduct a Transaction</h3>\n      <br />\n      <FormGroup>\n        <FormControl\n          input=\"text\"\n          placeholder=\"recipient\"\n          value={recipient}\n          onChange={updateRecipient}\n        />\n      </FormGroup>\n      <FormGroup>\n        <FormControl\n          input=\"number\"\n          placeholder=\"amount\"\n          value={amount}\n          onChange={updateAmount}\n        />\n      </FormGroup>\n      <div>\n        <Button\n          variant=\"danger\"\n          onClick={submitTransaction}\n        >\n          Submit\n        </Button>\n      </div>\n      <br />\n      <h4>Known Addresses</h4>\n      <div>\n        {\n          knownAddresses.map((knownAddress, i) => (\n            <span key={knownAddress}>\n              <u>{knownAddress}</u>{i !== knownAddresses.length - 1 ? ', ' : ''}\n            </span>\n          ))\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default ConductTransaction;\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport Transaction from './Transaction';\nimport { API_BASE_URL, SECONDS_JS } from '../config';\nimport history from '../history';\n\nconst POLL_INTERVAL = 10 * SECONDS_JS;\n\nfunction TransactionPool() {\n  const [transactions, setTransactions] = useState([]);\n\n  const fetchTransactions = () => {\n    fetch(`${API_BASE_URL}/transactions`)\n      .then(response => response.json())\n      .then(json => {\n        console.log('transactions json', json);\n\n        setTransactions(json);\n      });\n  }\n\n  useEffect(() => {\n    fetchTransactions();\n\n    const intervalId = setInterval(fetchTransactions, POLL_INTERVAL);\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const fetchMineBlock = () => {\n    fetch(`${API_BASE_URL}/blockchain/mine`)\n      .then(() => {\n        alert('Success!');\n\n        history.push('/blockchain');\n      });\n  }\n\n  return (\n    <div className=\"TransactionPool\">\n      <Link to=\"/\">Home</Link>\n      <hr />\n      <h3>Transaction Pool</h3>\n      <div>\n        {\n          transactions.map(transaction => (\n            <div key={transaction.id}>\n              <hr />\n              <Transaction transaction={transaction} />\n            </div>\n          ))\n        }\n      </div>\n      <hr />\n      <Button\n        variant=\"danger\"\n        onClick={fetchMineBlock}\n      >\n        Mine a block of these transactions\n      </Button>\n    </div>\n  )\n}\n\nexport default TransactionPool;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router, Switch, Route } from 'react-router-dom';\nimport './index.css';\nimport history from './history';\nimport App from './components/App';\nimport Blockchain from './components/Blockchain';\nimport ConductTransaction from './components/ConductTransaction';\nimport TransactionPool from './components/TransactionPool';\n\nReactDOM.render(\n  <Router history={history}>\n    <Switch>\n      <Route path='/' exact component={App} />\n      <Route path='/blockchain' component={Blockchain} />\n      <Route path='/conduct-transaction' component={ConductTransaction} />\n      <Route path='/transaction-pool' component={TransactionPool} />\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}